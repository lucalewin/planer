buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'me.moallemi.gradle:advanced-build-version:1.7.3'
    }
}

plugins {
    id 'com.android.application'
}

//apply plugin: 'me.moallemi.advanced-build-version'




//advancedVersioning {
//    nameOptions {
//        versionMajor 1
//        versionMinor 0
//        versionPatch 2
//    }
//    codeOptions {
//        versionCodeType 'AUTO_INCREMENT_ONE_STEP'
//        dependsOnTasks 'debug', 'release', 'assemble'
//        versionCodeStep 1
//    }
//    outputOptions {
//        renameOutput true
//        nameFormat '${appName}-${buildType}-${versionName}-${versionCode}'
//    }
//}

//def appVersionName = advancedVersioning.versionName
//def appVersionCode = advancedVersioning.versionCode

//System.out.println(appVersionName + " | " + appVersionCode)

android {
    compileSdk 32
    compileSdkVersion 32

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0

        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
        }

        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_CODE'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_CODE'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "dev.lucalewin.planer"
            minSdk 29
            targetSdk 32
            versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
            versionCode versionNumber
        }

        println defaultConfig.versionName

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def fileNaming = "apk/RELEASES"
                variant.outputs.each { out ->
                    def outputFile = out.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        out.outputFileName = "${fileNaming}-${versionMajor}.${versionMinor}.${versionPatch}-${outputFile.name}"
                    }
                }
            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '32.1.0 rc1'
}

//advancedVersioning.renameOutputApk()

dependencies {
    implementation 'io.github.yanndroid:oneui:2.3.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.vdurmont:semver4j:3.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
